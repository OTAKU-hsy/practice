#include <iostream>
#include <stack>

class MonotonicStack
{
private:
    std::stack<int> s;
public:
    int size() { return s.size(); }
    void pop() { s.pop(); }
    int top() { return s.top(); };
    int push(int element) {
        while (s.size() && s.top() > element)
            s.pop();
        s.push(element);
    }
    int function(const int* arr, int n) {
        int ans = 0;
        int j;
        for (int i = 0; i < n; ++i) {
            ans += arr[i];
            j = i + 1;
            for (; j < n; ++j) {
                if (arr[j] < arr[i]) {
                    ans -= arr[j];
                    break;
                }
            }
        }
        return ans;
    }
};
//对数组中的任意元素arr[i]，我们定义它的价值为v[i]=arr[i]-arr[j]，其中，j是满足j>i且arr[j]<arr[i]的最小下标，如果不存在这样的j，那么规定v[i]=arr[i]。
//function返回每个元素的价值之和。

