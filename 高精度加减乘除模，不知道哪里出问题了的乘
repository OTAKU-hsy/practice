#include<bits/stdc++.h>
using namespace std;

bool compare(string m, string n) {
	int Lm = m.length();
	int Ln = n.length();
	if (Lm != Ln)
		return Lm > Ln;
	for (int i = 0; i < Lm; i++)
		if (m[i] != n[i])
			return m[i] > n[i];
	return 1;
}

string jiafa(string m, string n) {
	if (!compare(m, n))
		swap(m, n);
	int Lm = m.length();
	int Ln = n.length();
	int* a = new int[Lm + 1];
	int* b = new int[Ln + 1];
	int* ans = new int[Lm + 2]();
	for (int i = 0; i < Lm; i++)
		a[Lm - i] = m[i] - '0';
	for (int i = 0; i < Ln; i++)
		b[Ln - i] = n[i] - '0';
	for (int i = 1; i <= Ln; i++) {
		ans[i] += a[i] + b[i];
		ans[i + 1] += ans[i] / 10;
		ans[i] %= 10;
	}
	for (int i = Ln + 1; i <= Lm; i++) {
		ans[i] += a[i];
		ans[i + 1] += ans[i] / 10;
		ans[i] %= 10;
	}
	delete[]a;
	delete[]b;
	while (ans[Lm + 1] == 0 && Lm > 0)
		Lm--;
	string k;
	for (int i = Lm + 1; i > 0; i--)
		k += (char)(ans[i] + '0');
	delete[]ans;
	return k;
}

string jianfa(string m, string n) {
	string k;
	if (m == n)
		k += (char)'0';
	else {
		int flag = 0;
		if (!compare(m, n)) {
			flag = 1;
			swap(m, n);
		}
		int Lm = m.length();
		int Ln = n.length();
		int* a = new int[Lm + 2]();
		int* b = new int[Ln + 2]();
		int* ans = new int[Lm + 2]();
		for (int i = 0; i < Lm; i++)
			a[Lm - i] = m[i] - '0';
		for (int i = 0; i < Ln; i++)
			b[Ln - i] = n[i] - '0';
		for (int i = 1; i <= Ln; i++) {
			if (a[i] < b[i]) {
				a[i + 1]--;
				a[i] += 10;
			}
			ans[i] = a[i] - b[i];
		}
		for (int i = Ln + 1; i <= Lm; i++) {
			if (a[i] < 0) {
				a[i] += 10;
				a[i + 1]--;
			}
			ans[i] = a[i];
		}
		delete[]a;
		delete[]b;
		while (ans[Lm] == 0 && Lm > 0)
			Lm--;
		if (flag == 1)
			k += '-';
		for (int i = Lm; i > 0; i--)
			k += (char)(ans[i] + '0');
		delete[]ans;
		return k;
	}
}

string chengfa(string m, string n) {
	string k;
	if (m == "0" || n == "0")
		k += "0";
	else {
		int Lm = m.length();
		int Ln = n.length();
		int x = Lm + Ln;
		int* a = new int[Lm + 1]();
		int* b = new int[Ln + 1]();
		int* ans = new int[x + 2]();
		for (int i = 0; i < Lm; i++)
			a[Lm - i] = m[i] - '0';
		for (int i = 0; i < Ln; i++)
			b[Lm - i] = n[i] - '0';
		for (int i = 1; i <= Lm; i++) {
			for (int j = 1; j <= Ln; j++) {
				ans[i + j - 1] += a[i] * b[j];
				ans[i + j] += ans[i + j - 1] / 10;
				ans[i + j - 1] %= 10;
			}
		}
		delete[]a;
		delete[]b;
		while (ans[x] == 0 && x > 0)
			x--;
		for (int i = x; i > 0; i--)
			k += (char)(ans[i] + '0');
		delete[]ans;
	}
	return k; 
}

string chufa(string m, string n) {
	string k;
	return k;
}

int main() {
	string m, n;
	cin >> m >> n;
	cout << chengfa(m, n);
	return 0;
}
