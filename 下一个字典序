#include<bits/stdc++.h>
using namespace std;
int main() {
	int n; cin >> n;
	int* a = new int[n];
	for (int i = 0; i < n; i++)
		cin >> a[i];
	int left = n - 1;
	while (a[left - 1] > a[left])
		left--;
	for (int i = n - 1; i >= left; i--)
		if (a[i] > a[left - 1]) {
			swap(a[i], a[left - 1]);
			break;
		}
	int L = n-left;
	for (int i = 1; i <= L/2; i++) 
		swap(a[n - i], a[n - L + i - 1]);
	for (int i = 0; i < n; i++)
		cout << a[i] << ' ';
	return 0;
}

	//找出给出的排列的最长连续递降后缀，其长度记为 m(m < n)。
	//找到最长递降后缀的之前的那个数，记为 pk，在最长递降后缀中找到比 pk大的数中最小的那个，交换这两个数。
	//将交换后的序列的后 m 个数翻转。
